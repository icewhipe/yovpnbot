#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
"""

import os
import sys
from pathlib import Path

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å .env —Ñ–∞–π–ª"""
    env_file = Path('.env')
    
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print("üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª...")
    
    with open(env_file, 'r') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ placeholder –∑–Ω–∞—á–µ–Ω–∏—è
    placeholder_values = [
        'your_actual_',
        'your_bot_token',
        'your_admin_token',
        'your_marzban_url',
        'your_secret_key'
    ]
    
    issues = []
    for placeholder in placeholder_values:
        if placeholder in content:
            issues.append(placeholder)
    
    if issues:
        print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã placeholder –∑–Ω–∞—á–µ–Ω–∏—è: {', '.join(issues)}")
        return False
    else:
        print("‚úÖ .env —Ñ–∞–π–ª –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True

def create_sample_env():
    """–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞"""
    sample_env = """# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è YoVPN –±–æ—Ç–∞

# Telegram Bot Token (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
USERBOT_TOKEN=your_bot_token_here

# Marzban API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
MARZBAN_API_URL=https://your-marzban-domain.com/api
MARZBAN_ADMIN_TOKEN=your_marzban_admin_token_here

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATA_FILE=data.json

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FILE=bot.log

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SECRET_KEY=your_secret_key_here
RATE_LIMIT_RPM=60
RATE_LIMIT_RPH=1000

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
SENTRY_DSN=
PROMETHEUS_PORT=8000

# Redis (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
REDIS_URL=redis://localhost:6379

# –ü–ª–∞—Ç–µ–∂–∏
DAILY_COST=4.0
MIN_BALANCE_WARNING=8.0

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
ADMIN_TELEGRAM_ID=
NOTIFICATION_ENABLED=true
"""
    
    with open('.env.sample', 'w') as f:
        f.write(sample_env)
    
    print("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.sample —Å –ø—Ä–∏–º–µ—Ä–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

def check_required_tokens():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã...")
    
    try:
        from src.config import config
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
        if not config.BOT_TOKEN or config.BOT_TOKEN.startswith('your_'):
            print("‚ùå USERBOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder")
            print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
            return False
        else:
            print("‚úÖ USERBOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Marzban API URL
        if not config.MARZBAN_API_URL or config.MARZBAN_API_URL.startswith('https://your-'):
            print("‚ùå MARZBAN_API_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder")
            print("   –£–∫–∞–∂–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Marzban API (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://your-domain.com/api)")
            return False
        else:
            print("‚úÖ MARZBAN_API_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Marzban Admin Token
        if not config.MARZBAN_ADMIN_TOKEN or config.MARZBAN_ADMIN_TOKEN.startswith('your_'):
            print("‚ùå MARZBAN_ADMIN_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder")
            print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏–∑ Marzban Swagger UI")
            return False
        else:
            print("‚úÖ MARZBAN_ADMIN_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_telegram_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
    
    try:
        from src.config import config
        import requests
        
        # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ Telegram API
        url = f"https://api.telegram.org/bot{config.BOT_TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('ok'):
                bot_info = data.get('result', {})
                print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ")
                print(f"   –ë–æ—Ç: @{bot_info.get('username', 'unknown')}")
                print(f"   –ò–º—è: {bot_info.get('first_name', 'unknown')}")
                return True
            else:
                print(f"‚ùå Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {data.get('description', 'Unknown error')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram: {e}")
        return False

def test_marzban_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Marzban"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Marzban...")
    
    try:
        from src.services.marzban_service import MarzbanService
        from src.config import config
        
        marzban_service = MarzbanService(config.MARZBAN_API_URL, config.MARZBAN_ADMIN_TOKEN)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
        if marzban_service.check_api_availability():
            print("‚úÖ Marzban API –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print("‚ùå Marzban API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Marzban: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ YoVPN –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_ok = check_env_file()
    
    if not env_ok:
        print("\nüìù –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞...")
        create_sample_env()
        print("\n‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.sample –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
    tokens_ok = check_required_tokens()
    
    if not tokens_ok:
        print("\n‚ùå –ù–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("üìù –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞...")
        create_sample_env()
        print("\n‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    telegram_ok = test_telegram_connection()
    marzban_ok = test_marzban_connection()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print(f"   .env —Ñ–∞–π–ª: {'‚úÖ' if env_ok else '‚ùå'}")
    print(f"   –¢–æ–∫–µ–Ω—ã: {'‚úÖ' if tokens_ok else '‚ùå'}")
    print(f"   Telegram: {'‚úÖ' if telegram_ok else '‚ùå'}")
    print(f"   Marzban: {'‚úÖ' if marzban_ok else '‚ùå'}")
    
    if all([env_ok, tokens_ok, telegram_ok, marzban_ok]):
        print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")
        return True
    else:
        print("\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)