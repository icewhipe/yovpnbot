#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Marzban —á–µ—Ä–µ–∑ API
"""

import requests
import json
import sys

def get_marzban_token():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Marzban"""
    print("=" * 60)
    print("–ü–û–õ–£–ß–ï–ù–ò–ï –¢–û–ö–ï–ù–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê MARZBAN")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    base_url = "https://alb-vpnprimex.duckdns.org"
    api_url = f"{base_url}/api"
    
    print(f"API URL: {api_url}")
    print()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    
    if not username or not password:
        print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏")
        return
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    auth_data = {
        "username": username,
        "password": password
    }
    
    print(f"\n1. –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ {username}...")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        response = requests.post(
            f"{api_url}/admin/token",
            json=auth_data,
            timeout=30,
            verify=True
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            # –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
            token_data = response.json()
            access_token = token_data.get('access_token')
            
            if access_token:
                print(f"\n‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                print(f"üîë Access Token: {access_token}")
                print(f"\nüìã –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª:")
                print(f"MARZBAN_ADMIN_TOKEN={access_token}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
                print(f"\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω...")
                headers = {
                    'Authorization': f'Bearer {access_token}',
                    'Content-Type': 'application/json'
                }
                
                test_response = requests.get(
                    f"{api_url}/system",
                    headers=headers,
                    timeout=30,
                    verify=True
                )
                
                print(f"   –°—Ç–∞—Ç—É—Å: {test_response.status_code}")
                if test_response.status_code == 200:
                    print("   ‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                    system_info = test_response.json()
                    print(f"   üìä –í–µ—Ä—Å–∏—è Marzban: {system_info.get('version', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                else:
                    print(f"   ‚ùå –¢–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {test_response.text}")
                
                return access_token
            else:
                print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print(f"   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
            print(f"   - –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            print(f"   - API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return None
            
    except requests.exceptions.SSLError as e:
        print(f"‚ùå SSL –æ—à–∏–±–∫–∞: {e}")
        print("   –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL...")
        
        try:
            response = requests.post(
                f"{api_url}/admin/token",
                json=auth_data,
                timeout=30,
                verify=False
            )
            
            print(f"   –°—Ç–∞—Ç—É—Å (–±–µ–∑ SSL): {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç (–±–µ–∑ SSL): {response.text}")
            
            if response.status_code == 200:
                token_data = response.json()
                access_token = token_data.get('access_token')
                
                if access_token:
                    print(f"\n‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ (–±–µ–∑ SSL)!")
                    print(f"üîë Access Token: {access_token}")
                    return access_token
                else:
                    print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ")
                    return None
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±–µ–∑ SSL): {response.status_code}")
                return None
                
        except Exception as e2:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ (–±–µ–∑ SSL): {e2}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def update_env_file(token):
    """–û–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º"""
    if not token:
        return
    
    print(f"\n3. –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª...")
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª
        with open('.env', 'r') as f:
            lines = f.readlines()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º MARZBAN_ADMIN_TOKEN
        updated = False
        for i, line in enumerate(lines):
            if line.startswith('MARZBAN_ADMIN_TOKEN='):
                lines[i] = f'MARZBAN_ADMIN_TOKEN={token}\n'
                updated = True
                break
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        if not updated:
            lines.append(f'MARZBAN_ADMIN_TOKEN={token}\n')
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open('.env', 'w') as f:
            f.writelines(lines)
        
        print("   ‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env: {e}")

if __name__ == "__main__":
    token = get_marzban_token()
    if token:
        update_env_file(token)
        print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:")
        print(f"   python3 main_improved.py")
    else:
        print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω")
        print(f"üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:")
        print(f"   https://alb-vpnprimex.duckdns.org")