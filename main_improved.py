#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π Telegram Bot –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Marzban
"""

import os
import sys
import logging
import time
from io import BytesIO

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

import telebot
from telebot import types

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –Ω–∞—à–µ–≥–æ –ø–∞–∫–µ—Ç–∞
from src.config import config
from src.services.user_service import UserService
from src.services.marzban_service import MarzbanService
from src.services.daily_payment_service import DailyPaymentService
from src.services.notification_service import NotificationService
from src.services.animation_service import StickerService
from src.services.ui_service import UIService
from src.services.copy_service import CopyService
from src.services.interaction_service import InteractionService
from src.models.user import User

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–æ–≤
try:
    import qrcode
    QR_AVAILABLE = True
except ImportError:
    QR_AVAILABLE = False

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
user_service = UserService()
marzban_service = MarzbanService()
notification_service = NotificationService()
sticker_service = StickerService()
ui_service = UIService()
copy_service = CopyService()
interaction_service = InteractionService()

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = telebot.TeleBot(config.BOT_TOKEN)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –≤–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
notification_service.set_bot(bot)
sticker_service.set_bot(bot)
copy_service.set_bot(bot)
interaction_service.set_bot(bot)

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ–ø–ª–∞—Ç—ã
daily_payment_service = DailyPaymentService(marzban_service, user_service)

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
test_users = set()

# –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
EMOJI = {
    'user': 'üë§',
    'subscription': 'üì±',
    'balance': 'üí∞',
    'referral': 'üë•',
    'info': '‚ÑπÔ∏è',
    'add': '‚ûï',
    'back': '‚¨ÖÔ∏è',
    'home': 'üè†',
    'check': '‚úÖ',
    'cross': '‚ùå',
    'warning': '‚ö†Ô∏è',
    'lock': 'üîí',
    'unlock': 'üîì',
    'settings': '‚öôÔ∏è',
    'support': 'üÜò',
    'channel': 'üì¢',
    'link': 'üîó',
    'qr': 'üì±',
    'share': 'üì§',
    'history': 'üìä',
    'coupon': 'üé´',
    'payment': 'üí≥',
    'device': 'üì±',
    'wifi': 'üì∂',
    'vpn': 'üîí',
    'speed': '‚ö°',
    'security': 'üõ°Ô∏è',
    'no_logs': 'üîí',
    'active': 'üü¢',
    'expired': 'üî¥',
    'limited': 'üü°',
    'on_hold': 'üü†',
    'robot': 'ü§ñ',
    'rocket': 'üöÄ',
    'gift': 'üéÅ',
    'hourglass': '‚è≥',
    'loading': '‚è≥'
}

def handle_error(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
    def wrapper(*args, **kwargs):
        try:
            return func(*args, **kwargs)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__}: {e}")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            return None
    return wrapper

@bot.message_handler(commands=['start'])
@handle_error
def start_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –±–æ–Ω—É—Å, —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞, –Ω–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
    user_id = message.from_user.id
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    username = message.from_user.username
    
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start: ID={user_id}, Username=@{username}, FirstName={first_name}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = user_service.ensure_user_record(user_id, username, first_name)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: /start ref_<id|username>
    try:
        param = None
        if message.text and ' ' in message.text:
            param = message.text.split(' ', 1)[1].strip()
        if param and param.startswith('ref_'):
            ref_key = param.replace('ref_', '', 1)
            referrer_id = int(ref_key) if ref_key.isdigit() else user_service.find_user_id_by_username(ref_key)
            if referrer_id:
                user_service.record_referral(referrer_id, user_id)
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: {e}")
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å 20 ‚ÇΩ (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ) - 5 –¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞
    if not user.bonus_given:
        user_service.add_balance(user_id, 20)
        user_service.update_user_record(user_id, {"bonus_given": True})
        
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
        sticker_service.send_celebration(message.chat.id, "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å 20 ‚ÇΩ")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º –±–æ–Ω—É—Å–µ
        notification_service.send_welcome_bonus_notification(user_id, 20, 20)
    
    # –ï—Å–ª–∏ —ç—Ç–æ —Å–∞–º—ã–π –ø–µ—Ä–≤—ã–π /start ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not user.first_start_completed:
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['settings']} –ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN", callback_data='start_setup'))
        welcome_text = (
            f"{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>\n\n"
            f"–í—ã –ø–æ–ø–∞–ª–∏ –≤ –±–æ—Ç–∞ <b>YoVPN</b>. –ú—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º <b>20 ‚ÇΩ</b> ‚Äî —ç—Ç–æ <b>5 –¥–Ω–µ–π</b> –¥–æ—Å—Ç—É–ø–∞ (4 ‚ÇΩ = 1 –¥–µ–Ω—å).\n\n"
            f"<b>–ü–æ—á–µ–º—É YoVPN:</b>\n"
            f"‚Ä¢ {EMOJI['speed']} –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n"
            f"‚Ä¢ {EMOJI['security']} –ù–∞–¥–µ–∂–Ω–∞—è –∑–∞—â–∏—Ç–∞\n"
            f"‚Ä¢ {EMOJI['no_logs']} –ë–µ–∑ –ª–æ–≥–æ–≤\n"
            f"‚Ä¢ {EMOJI['active']} –°—Ç–∞–±–∏–ª—å–Ω–æ 24/7\n\n"
            f"–ù–∞–∂–º–∏—Ç–µ ¬´–ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN¬ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
        )
        bot.send_message(message.chat.id, welcome_text, parse_mode='HTML', reply_markup=keyboard)
        user_service.update_user_record(user_id, {"first_start_completed": True})
        return
    
    # –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    show_main_menu(message)

@bot.callback_query_handler(func=lambda call: True)
@handle_error
def handle_callback(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback –∑–∞–ø—Ä–æ—Å–æ–≤"""
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç message —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    class FakeMessage:
        def __init__(self, call):
            self.chat = call.message.chat
            self.message_id = call.message.message_id
            self.from_user = call.from_user
    
    fake_message = FakeMessage(call)
    
    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è callback'–æ–≤
    callback_handlers = {
        "add_subscription": show_subscription_options,
        "my_subscriptions": show_my_subscriptions,
        "balance": show_balance_menu,
        "invite_friend": show_invite_menu,
        "my_referrals": show_referrals_menu,
        "about_service": show_about_service,
        "back_to_main": show_main_menu,
        "top_up_balance": show_payment_options,
        "payment_history": show_payment_history,
        "activate_coupon": activate_coupon,
        "share_link": share_referral_link,
        "show_qr": show_qr_code,
        "support_chat": show_support_chat,
        "channel_link": show_channel_link,
        'start_setup': show_setup_step1,
        'continue_setup': continue_setup_flow,
        'back_to_setup_1': show_setup_step1,
        'finish_setup': finish_setup,
        'show_qr_key': show_qr_key,
        # –ù–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        'activate_subscription': lambda m: get_test_period(m, m.from_user.username),
        'extend_subscription': show_payment_options,
        'subscription_settings': lambda m: show_my_subscriptions(m),
        'copy_subscription_link': lambda m: handle_copy_request(m, "subscription"),
        'show_subscription_qr': lambda m: handle_qr_request(m, "subscription"),
        'copy_referral_link': lambda m: handle_copy_request(m, "referral"),
        'show_referral_qr': lambda m: handle_qr_request(m, "referral"),
        'share_referral': lambda m: share_referral_link(m),
        'referral_stats': lambda m: show_referrals_menu(m),
        'custom_top_up': show_payment_options,
        'help': show_about_service
    }
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    if call.data.startswith("get_test_"):
        username = call.data.replace("get_test_", "")
        get_test_period(fake_message, username)
    elif call.data.startswith("subscribe_"):
        handle_subscription_purchase(fake_message, call.data)
    elif call.data.startswith('choose_device_'):
        device_key = call.data.replace('choose_device_', '')
        show_setup_step2(fake_message, device_key)
    elif call.data.startswith("get_link_"):
        username = call.data.replace("get_link_", "")
        show_vpn_links(fake_message, username)
    elif call.data.startswith("show_vless_"):
        username = call.data.replace("show_vless_", "")
        show_vless_links(fake_message, username)
    elif call.data.startswith("show_sub_"):
        username = call.data.replace("show_sub_", "")
        show_subscription_link(fake_message, username)
    elif call.data.startswith("copy_link_"):
        copy_vless_link(fake_message, call.data)
    elif call.data.startswith("get_configs_"):
        username = call.data.replace("get_configs_", "")
        get_vless_configs(fake_message, username)
    elif call.data.startswith("copy_"):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        copy_type = call.data.replace("copy_", "")
        handle_copy_request(fake_message, copy_type)
    elif call.data.startswith("qr_"):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ QR-–∫–æ–¥–æ–≤
        qr_type = call.data.replace("qr_", "")
        handle_qr_request(fake_message, qr_type)
    elif call.data.startswith("quick_top_up_"):
        # –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        amount = int(call.data.replace("quick_top_up_", ""))
        handle_quick_top_up(fake_message, amount)
    elif call.data.startswith("pay_"):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
        payment_method = call.data.split("_")[1]  # card, sbp, bank, wallet
        amount = int(call.data.split("_")[2])
        handle_payment_method(fake_message, payment_method, amount)
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å—Ç—ã—Ö callback'–æ–≤
        handler = callback_handlers.get(call.data)
        if handler:
            handler(fake_message)
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è
        if call.data.startswith("copy_"):
            interaction_service.show_loading_feedback(call.id, "–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...")
        elif call.data.startswith("qr_"):
            interaction_service.show_loading_feedback(call.id, "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥...")
        elif call.data.startswith("quick_top_up_"):
            interaction_service.show_loading_feedback(call.id, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂...")
        elif call.data in ["activate_subscription", "extend_subscription"]:
            interaction_service.show_loading_feedback(call.id, "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É...")
        else:
            bot.answer_callback_query(call.id)
    except Exception as e:
        logger.warning(f"–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback query: {e}")

@handle_error
def show_main_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –ï—Å–ª–∏ username None, –∏—Å–ø–æ–ª—å–∑—É–µ–º first_name
    if not username:
        username = first_name.lower().replace(" ", "_")
    
    logger.info(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: ID={user_id}, Username=@{username}, FirstName={first_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–ø–∏—Å–∫–∞
    user_info = marzban_service.get_user_info(username) if username else None
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Marzban, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if not user_info and username:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Marzban, —Å–æ–∑–¥–∞–µ–º...")
        try:
            # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_stats = user_service.get_user_stats(user_id)
            balance = user_stats.get('balance', 0)
            
            if balance >= 4:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ 1 –¥–µ–Ω—å
                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ 1 –¥–µ–Ω—å
                created_user = marzban_service.create_user(username, user_id, days=1)
                if created_user:
                    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ Marzban —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ 1 –¥–µ–Ω—å")
                    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    user_info = marzban_service.get_user_info(username)
                else:
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –≤ Marzban")
            else:
                logger.info(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}: {e}")
    
    is_new_user = user_id not in test_users
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_stats = user_service.get_user_stats(user_id)
    
    # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    has_subscription = user_info and user_info.get('status') == 'active'
    keyboard = ui_service.create_main_menu_keyboard(user_stats, has_subscription)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    balance = user_stats.get('balance', 0)
    days = user_stats.get('days_remaining', 0)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
    subscription_status = "–ê–∫—Ç–∏–≤–Ω–∞" if user_info and user_info.get('status') == 'active' else "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
    subscription_emoji = "üü¢" if user_info and user_info.get('status') == 'active' else "üî¥"
    
    if user_info:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–æ–¥–ø–∏—Å–∫–æ–π
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ (‚âà {days} –¥–Ω.)
‚îú –ü–æ–¥–ø–∏—Å–∫–∞: {subscription_emoji} {subscription_status}
‚îî –°—Ç–æ–∏–º–æ—Å—Ç—å: 4 ‚ÇΩ/–¥–µ–Ω—å

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    elif is_new_user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

{EMOJI['gift']} <b>–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>
–í—ã –ø–æ–ª—É—á–∏–ª–∏ 20 ‚ÇΩ –Ω–∞ –±–∞–ª–∞–Ω—Å (5 –¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞)

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ (‚âà {days} –¥–Ω.)
‚îú –ü–æ–¥–ø–∏—Å–∫–∞: üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞
‚îî –°—Ç–æ–∏–º–æ—Å—Ç—å: 4 ‚ÇΩ/–¥–µ–Ω—å

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª —Ç–µ—Å—Ç
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ (‚âà {days} –¥–Ω.)
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 0

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    
    try:
        bot.edit_message_text(
            welcome_text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        bot.send_message(
            message.chat.id,
            welcome_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

# –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–æ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ @handle_error
# –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ DATA

@handle_error
def show_subscription_options(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫"""
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 1 –º–µ—Å—è—Ü - 109 ‚ÇΩ", callback_data="subscribe_1"),
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 3 –º–µ—Å—è—Ü–∞ - 319 ‚ÇΩ", callback_data="subscribe_3"),
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 6 –º–µ—Å—è—Ü–µ–≤ - 628 ‚ÇΩ", callback_data="subscribe_6"),
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 12 –º–µ—Å—è—Ü–µ–≤ - 999 ‚ÇΩ", callback_data="subscribe_12"),
        types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )
    
    text = f"""
{EMOJI['subscription']} <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:</b>

<b>1 –º–µ—Å—è—Ü</b> - 109 ‚ÇΩ
<b>3 –º–µ—Å—è—Ü–∞</b> - 319 ‚ÇΩ (—Å–∫–∏–¥–∫–∞ 3%)
<b>6 –º–µ—Å—è—Ü–µ–≤</b> - 628 ‚ÇΩ (—Å–∫–∏–¥–∫–∞ 4%)
<b>12 –º–µ—Å—è—Ü–µ–≤</b> - 999 ‚ÇΩ (—Å–∫–∏–¥–∫–∞ 24%)

{EMOJI['device']} <b>–õ–∏–º–∏—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤:</b> 3
{EMOJI['speed']} <b>–°–∫–æ—Ä–æ—Å—Ç—å:</b> –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
{EMOJI['security']} <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b> –í–æ–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
{EMOJI['no_logs']} <b>–õ–æ–≥–∏:</b> –ù–µ –≤–µ–¥–µ–º
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

# –î–æ–±–∞–≤–ª—é –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏...

@handle_error
def show_balance_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –±–∞–ª–∞–Ω—Å–∞"""
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    user_stats = user_service.get_user_stats(message.from_user.id)
    balance = user_stats.get('balance', 0)
    days = user_stats.get('days_remaining', 0)
    
    # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = ui_service.create_balance_keyboard(balance)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    text = ui_service.format_balance_message(balance, days)
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_my_subscriptions(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name or "user"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ Marzban
    user_info = marzban_service.get_user_info(username)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_stats = user_service.get_user_stats(user_id)
    balance = user_stats.get('balance', 0)
    days_remaining = user_stats.get('days_remaining', 0)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
    subscription_info = {
        'status': user_info.get('status', 'inactive') if user_info else 'inactive',
        'days_remaining': days_remaining,
        'balance': balance
    }
    
    text = ui_service.format_subscription_message(subscription_info)
    keyboard = ui_service.create_subscription_keyboard(subscription_info)
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_invite_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name or "user"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    user_stats = user_service.get_user_stats(user_id)
    referrals_count = user_stats.get('referrals_count', 0)
    referral_income = user_stats.get('referral_income', 0)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot_username = bot.get_me().username
    referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
    
    # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = ui_service.create_referral_keyboard(referral_link)
    
    text = f"""
üë• <b>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!</b>

‚ÑπÔ∏è <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥—É –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
‚Ä¢ –î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
‚Ä¢ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 12 ‚ÇΩ –Ω–∞ –±–∞–ª–∞–Ω—Å (3 –¥–Ω—è)
‚Ä¢ –î—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç 20 ‚ÇΩ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å (5 –¥–Ω–µ–π)

üîó <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>
<code>{referral_link}</code>

üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {referrals_count}
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referral_income} ‚ÇΩ
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –¥–Ω–µ–π: {int(referral_income / 4)}
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_referrals_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    user_id = message.from_user.id
    user_stats = user_service.get_user_stats(user_id)
    referrals_count = user_stats.get('referrals_count', 0)
    referral_income = user_stats.get('referral_income', 0)
    
    text = f"""
{EMOJI['referral']} <b>–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã</b>

{EMOJI['info']} <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {referrals_count}
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referral_income} ‚ÇΩ

{EMOJI['info']} <b>–ö–∞–∫ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å:</b>
1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
2. –î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ
3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 12 ‚ÇΩ –±–æ–Ω—É—Å
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_about_service(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ"""
    text = f"""
{EMOJI['info']} <b>–û —Å–µ—Ä–≤–∏—Å–µ YoVPN</b>

{EMOJI['speed']} <b>–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å</b>
–°–µ—Ä–≤–µ—Ä—ã –≤ 50+ —Å—Ç—Ä–∞–Ω–∞—Ö –º–∏—Ä–∞

{EMOJI['security']} <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</b>
–í–æ–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è

{EMOJI['no_logs']} <b>–ë–µ–∑ –ª–æ–≥–æ–≤</b>
–ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ

{EMOJI['active']} <b>–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å</b>
–†–∞–±–æ—Ç–∞–µ–º 24/7 –±–µ–∑ –ø–µ—Ä–µ–±–æ–µ–≤

{EMOJI['device']} <b>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</b>
–î–æ 3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

{EMOJI['support']} <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>
–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–º–æ—â—å
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_payment_options(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"""
    text = f"""
{EMOJI['payment']} <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>

{EMOJI['info']} <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:</b>
‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
‚Ä¢ –°–ë–ü (–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π)
‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏

{EMOJI['warning']} <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="balance"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_payment_history(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–ª–∞—Ç–µ–∂–µ–π"""
    text = f"""
{EMOJI['history']} <b>–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π</b>

{EMOJI['warning']} <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="balance"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def activate_coupon(message):
    """–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫—É–ø–æ–Ω–∞"""
    text = f"""
{EMOJI['coupon']} <b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫—É–ø–æ–Ω–∞</b>

{EMOJI['warning']} <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="balance"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def share_referral_link(message):
    """–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π"""
    user_id = message.from_user.id
    bot_username = bot.get_me().username
    referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
    
    text = f"""
{EMOJI['share']} <b>–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π</b>

{EMOJI['link']} <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b>
<code>{referral_link}</code>

{EMOJI['info']} <b>–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:</b>
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥—É –≤ –ª—é–±–æ–º –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ
3. –î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ
4. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 12 ‚ÇΩ –±–æ–Ω—É—Å
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="invite_friend"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_qr_code(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    user_id = message.from_user.id
    bot_username = bot.get_me().username
    referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
    
    if QR_AVAILABLE:
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
            qr = qrcode.QRCode(version=1, box_size=10, border=5)
            qr.add_data(referral_link)
            qr.make(fit=True)
            
            img = qr.make_image(fill_color="black", back_color="white")
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ BytesIO
            bio = BytesIO()
            img.save(bio, 'PNG')
            bio.seek(0)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
            bot.send_photo(
                message.chat.id,
                photo=bio,
                caption=f"{EMOJI['qr']} <b>QR-–∫–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n{EMOJI['info']} –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º QR-–∫–æ–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏!",
                parse_mode='HTML'
            )
            return
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞: {e}")
    
    # –ï—Å–ª–∏ QR-–∫–æ–¥ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
    text = f"""
{EMOJI['qr']} <b>QR-–∫–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏</b>

{EMOJI['link']} <b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:</b>
<code>{referral_link}</code>

{EMOJI['info']} <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å QR-–∫–æ–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏
2. –î—Ä—É–≥ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç QR-–∫–æ–¥
3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 12 ‚ÇΩ –±–æ–Ω—É—Å
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="invite_friend"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_support_chat(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    text = f"""
{EMOJI['support']} <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>

{EMOJI['info']} <b>–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:</b>
‚Ä¢ Telegram: @yovpn_support
‚Ä¢ Email: support@yovpn.com
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7

{EMOJI['warning']} <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@handle_error
def show_channel_link(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª"""
    text = f"""
{EMOJI['channel']} <b>–ù–∞—à –∫–∞–Ω–∞–ª</b>

{EMOJI['info']} <b>–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:</b>
‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
‚Ä¢ –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

{EMOJI['warning']} <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
"""
    
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
@handle_error
def get_test_period(message, username):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥"""
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_stats = user_service.get_user_stats(user_id)
    balance = user_stats.get('balance', 0)
    
    if balance >= 4:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ 1 –¥–µ–Ω—å
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        days = int(balance / 4)
        sticker_service.animate_subscription_activation(message.chat.id, days)
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Marzban —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ 1 –¥–µ–Ω—å
        try:
            created_user = marzban_service.create_user(username, user_id, days=1)
            if created_user:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
                sticker_service.send_celebration(
                    message.chat.id, 
                    f"üéâ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –î–æ—Å—Ç—É–ø–Ω–æ {days} –¥–Ω–µ–π"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
                notification_service.send_subscription_reactivated_notification(user_id, balance)
            else:
                interaction_service.create_error_animation(
                    message.chat.id, 
                    "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {username}: {e}")
            interaction_service.create_error_animation(
                message.chat.id, 
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏."
            )
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        interaction_service.create_warning_feedback(
            message.chat.id, 
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏"
        )
        
        text = f"""
‚ö†Ô∏è <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</b>

üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {balance} ‚ÇΩ
üí≥ <b>–¢—Ä–µ–±—É–µ—Ç—Å—è:</b> 4 ‚ÇΩ (1 –¥–µ–Ω—å)

–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏.
"""
        bot.send_message(message.chat.id, text, parse_mode='HTML')

@handle_error
def handle_subscription_purchase(message, callback_data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['subscription']} <b>–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def show_setup_step1(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['settings']} <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def show_setup_step2(message, device_key):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ç–æ—Ä–æ–π —à–∞–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['settings']} <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def continue_setup_flow(message):
    """–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É"""
    bot.send_message(message.chat.id, f"{EMOJI['settings']} <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def finish_setup(message):
    """–ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É"""
    bot.send_message(message.chat.id, f"{EMOJI['settings']} <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VPN</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def show_qr_key(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥ –∫–ª—é—á–∞"""
    bot.send_message(message.chat.id, f"{EMOJI['qr']} <b>QR-–∫–æ–¥ –∫–ª—é—á–∞</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def show_vpn_links(message, username):
    """–ü–æ–∫–∞–∑–∞—Ç—å VPN —Å—Å—ã–ª–∫–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['vpn']} <b>VPN —Å—Å—ã–ª–∫–∏</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def show_vless_links(message, username):
    """–ü–æ–∫–∞–∑–∞—Ç—å VLESS —Å—Å—ã–ª–∫–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['vpn']} <b>VLESS —Å—Å—ã–ª–∫–∏</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def show_subscription_link(message, username):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –ø–æ–¥–ø–∏—Å–∫–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['subscription']} <b>–°—Å—ã–ª–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def copy_vless_link(message, callback_data):
    """–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å VLESS —Å—Å—ã–ª–∫—É"""
    bot.send_message(message.chat.id, f"{EMOJI['vpn']} <b>–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def get_vless_configs(message, username):
    """–ü–æ–ª—É—á–∏—Ç—å VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    bot.send_message(message.chat.id, f"{EMOJI['vpn']} <b>VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>\n\n{EMOJI['warning']} –§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@handle_error
def handle_copy_request(message, copy_type):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name or "user"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = marzban_service.get_user_info(username)
    
    if copy_type == "vless" and user_info:
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ VLESS —Å—Å—ã–ª–∫–∏
        vless_link = user_info.get('links', [{}])[0].get('link', '')
        if vless_link:
            copy_service.handle_copy_request(message.chat.id, vless_link, "vless")
        else:
            bot.send_message(message.chat.id, "‚ùå VLESS —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    elif copy_type == "subscription" and user_info:
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Subscription URL
        subscription_url = user_info.get('subscription_url', '')
        if subscription_url:
            copy_service.handle_copy_request(message.chat.id, subscription_url, "subscription")
        else:
            bot.send_message(message.chat.id, "‚ùå Subscription URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
    elif copy_type == "referral":
        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        bot_username = bot.get_me().username
        referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
        copy_service.handle_copy_request(message.chat.id, referral_link, "referral")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è")

@handle_error
def handle_qr_request(message, qr_type):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ QR-–∫–æ–¥"""
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name or "user"
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = marzban_service.get_user_info(username)
    
    if qr_type == "vless" and user_info:
        # QR-–∫–æ–¥ VLESS —Å—Å—ã–ª–∫–∏
        vless_link = user_info.get('links', [{}])[0].get('link', '')
        if vless_link:
            copy_service.handle_qr_request(message.chat.id, vless_link, "vless")
        else:
            bot.send_message(message.chat.id, "‚ùå VLESS —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    elif qr_type == "subscription" and user_info:
        # QR-–∫–æ–¥ Subscription URL
        subscription_url = user_info.get('subscription_url', '')
        if subscription_url:
            copy_service.handle_qr_request(message.chat.id, subscription_url, "subscription")
        else:
            bot.send_message(message.chat.id, "‚ùå Subscription URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
    elif qr_type == "referral":
        # QR-–∫–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        bot_username = bot.get_me().username
        referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
        copy_service.handle_qr_request(message.chat.id, referral_link, "referral")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø QR-–∫–æ–¥–∞")

@handle_error
def handle_quick_top_up(message, amount):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –±—ã—Å—Ç—Ä–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ"""
    user_id = message.from_user.id
    days = int(amount / 4)
    
    # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –£–Ø–ó–ò–í–ò–ú–û–°–¢–¨ –ò–°–ü–†–ê–í–õ–ï–ù–ê!
    # –ù–ï –î–û–ë–ê–í–õ–Ø–ï–ú –°–†–ï–î–°–¢–í–ê –ë–ï–ó –†–ï–ê–õ–¨–ù–û–ì–û –ü–õ–ê–¢–ï–ñ–ê
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—É–º–º–µ
    text = f"""
üí≥ <b>–í—ã–±—Ä–∞–Ω–∞ —Å—É–º–º–∞: {amount} ‚ÇΩ</b>

üìÖ <b>–î–æ—Å—Ç—É–ø–Ω–æ –¥–Ω–µ–π:</b> {days}
üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 4 ‚ÇΩ/–¥–µ–Ω—å

‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –≠—Ç–æ –¥–µ–º–æ-—Ä–µ–∂–∏–º. 
–í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π.

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>
‚Ä¢ üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
‚Ä¢ üì± –°–ë–ü (–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π)
‚Ä¢ üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥
‚Ä¢ üí∞ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏
"""
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –æ–ø–ª–∞—Ç—ã
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π", callback_data=f"pay_card_{amount}"),
        types.InlineKeyboardButton("üì± –°–ë–ü", callback_data=f"pay_sbp_{amount}"),
        types.InlineKeyboardButton("üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥", callback_data=f"pay_bank_{amount}"),
        types.InlineKeyboardButton("üí∞ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏", callback_data=f"pay_wallet_{amount}")
    )
    keyboard.add(
        types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Å—É–º–º—ã", callback_data="balance")
    )
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Marzban API
    if not marzban_service.health_check():
        logger.warning("Marzban API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –±–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    try:
        daily_payment_service.start_daily_checker()
        logger.info("–°–∏—Å—Ç–µ–º–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ–ø–ª–∞—Ç—ã –∑–∞–ø—É—â–µ–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ–ø–ª–∞—Ç—ã: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∑–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º
    try:
        daily_payment_service.check_low_balance_users()
        logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∑–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∑–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º: {e}")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
    max_retries = 3
    retry_count = 0
    
    while retry_count < max_retries:
        try:
            bot.polling(none_stop=True)
            break
        except Exception as e:
            if "Conflict: terminated by other getUpdates request" in str(e):
                retry_count += 1
                logger.warning(f"–î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ {retry_count}/{max_retries}")
                if retry_count < max_retries:
                    time.sleep(10)  # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                else:
                    logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫")
                    sys.exit(1)
            else:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
                sys.exit(1)