#!/usr/bin/env python3
"""
Telegram Bot –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Marzban
"""

import os
import sys
import logging
import time
from decouple import config
import telebot
from telebot import types
from marzban_api import MarzbanAPI

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
BOT_TOKEN = config('USERBOT_TOKEN', default='8385845645:AAGiZhSwkRgndegtTsy573Smnul2wFNwLu0')
MARZBAN_API_URL = config('MARZBAN_API_URL', default='https://alb-vpnprimex.duckdns.org:443/api')
MARZBAN_ADMIN_TOKEN = config('MARZBAN_ADMIN_TOKEN', default='')
DB_HOST = config('DB_HOST', default='localhost')
DB_PORT = config('DB_PORT', default=3306, cast=int)
DB_NAME = config('DB_NAME', default='marzban')
DB_USER = config('DB_USER', default='marzban')
DB_PASSWORD = config('DB_PASSWORD', default='DcR92D5bNArCjVTpakf')

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Marzban API —Å —Ç–æ–∫–µ–Ω–æ–º
marzban_api = MarzbanAPI(MARZBAN_API_URL, MARZBAN_ADMIN_TOKEN)

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥
test_users = set()

# –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
EMOJI = {
    'user': 'üë§',
    'subscription': 'üì±',
    'balance': 'üí∞',
    'referral': 'üë•',
    'info': '‚ÑπÔ∏è',
    'add': '‚ûï',
    'back': '‚¨ÖÔ∏è',
    'home': 'üè†',
    'check': '‚úÖ',
    'cross': '‚ùå',
    'warning': '‚ö†Ô∏è',
    'lock': 'üîí',
    'unlock': 'üîì',
    'settings': '‚öôÔ∏è',
    'support': 'üÜò',
    'channel': 'üì¢',
    'link': 'üîó',
    'qr': 'üì±',
    'share': 'üì§',
    'history': 'üìä',
    'coupon': 'üé´',
    'payment': 'üí≥',
    'device': 'üì±',
    'wifi': 'üì∂',
    'vpn': 'üîí',
    'speed': '‚ö°',
    'security': 'üõ°Ô∏è',
    'no_logs': 'üîí',
    'active': 'üü¢',
    'expired': 'üî¥',
    'limited': 'üü°',
    'on_hold': 'üü†',
    'robot': 'ü§ñ',
    'rocket': 'üöÄ',
    'gift': 'üéÅ',
    'hourglass': '‚è≥',
    'loading': '‚è≥'
}

@bot.message_handler(commands=['start'])
def start_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –ï—Å–ª–∏ username None, –∏—Å–ø–æ–ª—å–∑—É–µ–º first_name
    if not username:
        username = first_name.lower().replace(" ", "_")
    
    logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start: ID={user_id}, Username=@{username}, FirstName={first_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–ø–∏—Å–∫–∞
    user_info = marzban_api.get_user_info(username) if username else None
    is_new_user = user_id not in test_users
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    
    if user_info:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–æ–¥–ø–∏—Å–∫–æ–π
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['add']} –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription"),
            types.InlineKeyboardButton(f"{EMOJI['subscription']} –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subscriptions")
        )
    elif is_new_user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['gift']} –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥", callback_data=f"get_test_{username}"),
            types.InlineKeyboardButton(f"{EMOJI['subscription']} –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subscriptions")
        )
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª —Ç–µ—Å—Ç
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['add']} –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription"),
            types.InlineKeyboardButton(f"{EMOJI['subscription']} –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subscriptions")
        )
    
    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –ë–∞–ª–∞–Ω—Å (–¥–ª–∏–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['balance']} –ë–∞–ª–∞–Ω—Å", callback_data="balance")
    )
    
    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∏ –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['referral']} –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="invite_friend"),
        types.InlineKeyboardButton(f"{EMOJI['referral']} –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="my_referrals")
    )
    
    # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞: –û —Å–µ—Ä–≤–∏—Å–µ (–¥–ª–∏–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['info']} –û —Å–µ—Ä–≤–∏—Å–µ", callback_data="about_service")
    )
    
    if user_info:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–æ–¥–ø–∏—Å–∫–æ–π
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: 0 RUB
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 1

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    elif is_new_user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

{EMOJI['gift']} <b>–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>
–í—ã –ø–æ–ª—É—á–∏–ª–∏ 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ VPN

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: 0 RUB
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 0

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª —Ç–µ—Å—Ç
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: 0 RUB
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 0

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    
    bot.send_message(
        message.chat.id,
        welcome_text,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback –∑–∞–ø—Ä–æ—Å–æ–≤"""
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç message —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    class FakeMessage:
        def __init__(self, call):
            self.chat = call.message.chat
            self.message_id = call.message.message_id
            self.from_user = call.from_user  # –ò—Å–ø–æ–ª—å–∑—É–µ–º call.from_user, –∞ –Ω–µ call.message.from_user
    
    fake_message = FakeMessage(call)
    
    if call.data == "add_subscription":
        show_subscription_options(fake_message)
    elif call.data == "my_subscriptions":
        show_my_subscriptions(fake_message)
    elif call.data == "balance":
        show_balance_menu(fake_message)
    elif call.data.startswith("get_test_"):
        username = call.data.replace("get_test_", "")
        get_test_period(fake_message, username)
    elif call.data == "invite_friend":
        show_invite_menu(fake_message)
    elif call.data == "my_referrals":
        show_referrals_menu(fake_message)
    elif call.data == "about_service":
        show_about_service(fake_message)
    elif call.data == "back_to_main":
        show_main_menu(fake_message)
    elif call.data.startswith("subscribe_"):
        handle_subscription_purchase(fake_message, call.data)
    elif call.data == "top_up_balance":
        show_payment_options(fake_message)
    elif call.data == "payment_history":
        show_payment_history(fake_message)
    elif call.data == "activate_coupon":
        activate_coupon(fake_message)
    elif call.data == "share_link":
        share_referral_link(fake_message)
    elif call.data == "show_qr":
        show_qr_code(fake_message)
    elif call.data == "support_chat":
        show_support_chat(fake_message)
    elif call.data == "channel_link":
        show_channel_link(fake_message)
    elif call.data.startswith("get_link_"):
        username = call.data.replace("get_link_", "")
        show_vpn_links(fake_message, username)
    elif call.data.startswith("show_vless_"):
        username = call.data.replace("show_vless_", "")
        show_vless_links(fake_message, username)
    elif call.data.startswith("show_sub_"):
        username = call.data.replace("show_sub_", "")
        show_subscription_link(fake_message, username)
    elif call.data.startswith("copy_link_"):
        copy_vless_link(fake_message, call.data)
    elif call.data.startswith("get_configs_"):
        username = call.data.replace("get_configs_", "")
        get_vless_configs(fake_message, username)
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —Å—Ä–∞–∑—É
    try:
        bot.answer_callback_query(call.id)
    except:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ callback query

def show_main_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π)"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –ï—Å–ª–∏ username None, –∏—Å–ø–æ–ª—å–∑—É–µ–º first_name
    if not username:
        username = first_name.lower().replace(" ", "_")
    
    logger.info(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: ID={user_id}, Username=@{username}, FirstName={first_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–ø–∏—Å–∫–∞
    user_info = marzban_api.get_user_info(username) if username else None
    is_new_user = user_id not in test_users
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    
    if user_info:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–æ–¥–ø–∏—Å–∫–æ–π
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['add']} –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription"),
            types.InlineKeyboardButton(f"{EMOJI['subscription']} –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subscriptions")
        )
    elif is_new_user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['gift']} –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥", callback_data=f"get_test_{username}"),
            types.InlineKeyboardButton(f"{EMOJI['subscription']} –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subscriptions")
        )
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª —Ç–µ—Å—Ç
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['add']} –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription"),
            types.InlineKeyboardButton(f"{EMOJI['subscription']} –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subscriptions")
        )
    
    # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –ë–∞–ª–∞–Ω—Å (–¥–ª–∏–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['balance']} –ë–∞–ª–∞–Ω—Å", callback_data="balance")
    )
    
    # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∏ –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['referral']} –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="invite_friend"),
        types.InlineKeyboardButton(f"{EMOJI['referral']} –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã", callback_data="my_referrals")
    )
    
    # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞: –û —Å–µ—Ä–≤–∏—Å–µ (–¥–ª–∏–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['info']} –û —Å–µ—Ä–≤–∏—Å–µ", callback_data="about_service")
    )
    
    if user_info:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–æ–¥–ø–∏—Å–∫–æ–π
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: 0 RUB
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 1

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    elif is_new_user:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

{EMOJI['gift']} <b>–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>
–í—ã –ø–æ–ª—É—á–∏–ª–∏ 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ VPN

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: 0 RUB
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 0

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª —Ç–µ—Å—Ç
        welcome_text = f"""
{EMOJI['user']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}!</b>

<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
‚îú ID: {user_id}
‚îú Username: @{username}
‚îú –ë–∞–ª–∞–Ω—Å: 0 RUB
‚îî –ü–æ–¥–ø–∏—Å–æ–∫: 0

{EMOJI['rocket']} <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
    
    try:
        bot.edit_message_text(
            welcome_text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        bot.send_message(
            message.chat.id,
            welcome_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def show_subscription_options(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫"""
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 1 –º–µ—Å—è—Ü - 109 ‚ÇΩ", callback_data="subscribe_1"),
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 3 –º–µ—Å—è—Ü–∞ - 319 ‚ÇΩ", callback_data="subscribe_3"),
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 6 –º–µ—Å—è—Ü–µ–≤ - 628 ‚ÇΩ", callback_data="subscribe_6"),
        types.InlineKeyboardButton(f"{EMOJI['subscription']} 12 –º–µ—Å—è—Ü–µ–≤ - 999 ‚ÇΩ", callback_data="subscribe_12"),
        types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )
    
    text = f"""
{EMOJI['subscription']} <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:</b>

<b>1 –º–µ—Å—è—Ü</b> - 109 ‚ÇΩ
<b>3 –º–µ—Å—è—Ü–∞</b> - 319 ‚ÇΩ (—Å–∫–∏–¥–∫–∞ 3%)
<b>6 –º–µ—Å—è—Ü–µ–≤</b> - 628 ‚ÇΩ (—Å–∫–∏–¥–∫–∞ 4%)
<b>12 –º–µ—Å—è—Ü–µ–≤</b> - 999 ‚ÇΩ (—Å–∫–∏–¥–∫–∞ 24%)

{EMOJI['device']} <b>–õ–∏–º–∏—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤:</b> 3
{EMOJI['speed']} <b>–°–∫–æ—Ä–æ—Å—Ç—å:</b> –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
{EMOJI['security']} <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b> –í–æ–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
{EMOJI['no_logs']} <b>–õ–æ–≥–∏:</b> –ù–µ –≤–µ–¥–µ–º
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def get_test_period(message, username):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π"""
    import time
    import threading
    
    user_id = message.from_user.id
    
    def animate_creation():
        """–ê–Ω–∏–º–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è VPN –∞–∫–∫–∞—É–Ω—Ç–∞"""
        stages = [
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...</b>

{EMOJI['loading']} –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä–∞–º
""",
                "duration": 3
            },
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID...</b>

{EMOJI['loading']} –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
""",
                "duration": 4
            },
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º VPN –ø—Ä–æ—Ç–æ–∫–æ–ª...</b>

{EMOJI['loading']} –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º VLESS —Å Reality
""",
                "duration": 5
            },
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–í—ã–¥–µ–ª—è–µ–º —Ä–µ—Å—É—Ä—Å—ã...</b>

{EMOJI['loading']} –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫
""",
                "duration": 4
            },
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç...</b>

{EMOJI['loading']} –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è 7 –¥–Ω–µ–π
""",
                "duration": 4
            },
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞...</b>

{EMOJI['loading']} –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
""",
                "duration": 5
            },
            {
                "text": f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['hourglass']} <b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞...</b>

{EMOJI['loading']} –ì–æ—Ç–æ–≤–∏–º —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
""",
                "duration": 4
            }
        ]
        
        for stage in stages:
            try:
                bot.edit_message_text(
                    stage["text"],
                    message.chat.id,
                    message.message_id,
                    parse_mode='HTML'
                )
            except:
                pass
            time.sleep(stage["duration"])
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    animation_thread = threading.Thread(target=animate_creation)
    animation_thread.start()
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    animation_thread.join()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
    logger.info(f"–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}")
    test_user = marzban_api.create_test_user(username, user_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∏–≤—à–∏—Ö —Ç–µ—Å—Ç
    test_users.add(user_id)
    
    if test_user:
        # –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['link']} –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data=f"get_link_{username}"))
        
        success_text = f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['gift']} <b>üéâ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>

{EMOJI['active']} <b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–µ–Ω (—Ç–µ—Å—Ç)
{EMOJI['device']} <b>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b> 0/3
{EMOJI['warning']} <b>–¢—Ä–∞—Ñ–∏–∫:</b> 0 B / ‚àû
{EMOJI['info']} <b>–î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å:</b> 7

{EMOJI['rocket']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>
–í—ã –ø–æ–ª—É—á–∏–ª–∏ 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ VPN
"""
    else:
        # –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(f"{EMOJI['add']} –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription"),
            types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main")
        )
        
        success_text = f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['cross']} <b>–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞</b>

{EMOJI['rocket']} <b>–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ VPN:</b>
‚Ä¢ –°–≤–æ–±–æ–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
‚Ä¢ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
‚Ä¢ –í–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ 3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤
‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å - –Ω–∏–∫–∞–∫–∏—Ö –ª–æ–≥–æ–≤

{EMOJI['gift']} <b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</b>
–ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –≤—Å–µ–≥–æ –∑–∞ 109‚ÇΩ
"""
    
    try:
        bot.edit_message_text(
            success_text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except:
        bot.send_message(
            message.chat.id,
            success_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def show_my_subscriptions(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    keyboard = types.InlineKeyboardMarkup()
    
    # –ü–æ–ª—É—á–∞–µ–º username –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    username = message.from_user.username
    user_id = message.from_user.id
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID={user_id}, Username=@{username}, FirstName={first_name}")
    
    # –ï—Å–ª–∏ username None, –∏—Å–ø–æ–ª—å–∑—É–µ–º first_name
    if not username:
        username = first_name.lower().replace(" ", "_")
        logger.info(f"Username –ø—É—Å—Ç–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º: {username}")
    
    logger.info(f"–ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Marzban: {username}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Marzban
    user_info = marzban_api.get_user_info(username)
    
    if not user_info:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ–≤—ã–π –ª–∏ —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        is_new_user = user_id not in test_users
        
        if is_new_user:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
            keyboard.add(
                types.InlineKeyboardButton(f"{EMOJI['gift']} –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥", callback_data=f"get_test_{username}"),
                types.InlineKeyboardButton(f"{EMOJI['add']} –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription")
            )
            
            text = f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['gift']} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

{EMOJI['rocket']} <b>–ü–æ–ª—É—á–∏—Ç–µ 7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ VPN:</b>
‚Ä¢ –°–≤–æ–±–æ–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
‚Ä¢ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
‚Ä¢ –í–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ 3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤
‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å - –Ω–∏–∫–∞–∫–∏—Ö –ª–æ–≥–æ–≤

{EMOJI['gift']} <b>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥" –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b>
"""
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∞–ª —Ç–µ—Å—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–∫—É–ø–∫–∏
            keyboard.add(
                types.InlineKeyboardButton(f"{EMOJI['add']} –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="add_subscription"),
                types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main")
            )
            
            text = f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['cross']} <b>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏</b>

{EMOJI['rocket']} <b>–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ VPN:</b>
‚Ä¢ –°–≤–æ–±–æ–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
‚Ä¢ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
‚Ä¢ –í–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ 3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤
‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å - –Ω–∏–∫–∞–∫–∏—Ö –ª–æ–≥–æ–≤

{EMOJI['gift']} <b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</b>
–ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –≤—Å–µ–≥–æ –∑–∞ 109‚ÇΩ
"""
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        status = user_info['status']
        days_remaining = user_info['days_remaining']
        traffic = user_info['traffic']
        links = user_info['links']
        subscription_url = user_info['subscription_url']
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —ç–º–æ–¥–∑–∏
        if status == 'active':
            status_emoji = EMOJI['active']
            status_text = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞"
        elif status == 'expired':
            status_emoji = EMOJI['expired']
            status_text = "üî¥ –ò—Å—Ç–µ–∫–ª–∞"
        elif status == 'limited':
            status_emoji = EMOJI['limited']
            status_text = "üü° –¢—Ä–∞—Ñ–∏–∫ –∏—Å—á–µ—Ä–ø–∞–Ω"
        else:
            status_emoji = EMOJI['cross']
            status_text = "‚ö´ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç—Ä–∞—Ñ–∏–∫
        used_traffic = marzban_api.format_traffic(traffic['used'])
        if traffic['limit'] == "‚àû":
            limit_traffic = "‚àû"
            traffic_percent = 0
        else:
            limit_traffic = marzban_api.format_traffic(traffic['limit'])
            traffic_percent = traffic['percent']
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['link']} –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data=f"get_link_{username}"))
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['add']} –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data="add_subscription"))
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main"))
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º
        text = f"""
{EMOJI['subscription']} <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

{status_emoji} <b>–°—Ç–∞—Ç—É—Å:</b> {status_text}
{EMOJI['device']} <b>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b> 0/3
{EMOJI['warning']} <b>–¢—Ä–∞—Ñ–∏–∫:</b> {used_traffic} / {limit_traffic} ({traffic_percent}%)

{EMOJI['info']} <b>–î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å:</b> {days_remaining if days_remaining != 999 else '‚àû'}

{EMOJI['link']} <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</b>
‚Ä¢ VLESS: {len(links)} —Å–µ—Ä–≤–µ—Ä–æ–≤
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞: –ì–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
"""
    
    try:
        bot.edit_message_text(
            text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def show_vpn_links(message, username):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫–∏ VPN –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    keyboard = types.InlineKeyboardMarkup()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_info = marzban_api.get_user_info(username)
    
    if not user_info:
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="my_subscriptions"))
        text = f"""
{EMOJI['cross']} <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</b>

{EMOJI['info']} –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
"""
    else:
        links = user_info['links']
        subscription_url = user_info['subscription_url']
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å—Å—ã–ª–æ–∫
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['link']} VLESS —Å—Å—ã–ª–∫–∏", callback_data=f"show_vless_{username}"))
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['subscription']} –ü–æ–¥–ø–∏—Å–∫–∞", callback_data=f"show_sub_{username}"))
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="my_subscriptions"))
        
        text = f"""
{EMOJI['link']} <b>–°—Å—ã–ª–∫–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VPN</b>

{EMOJI['rocket']} <b>–î–æ—Å—Ç—É–ø–Ω–æ:</b>
‚Ä¢ VLESS —Å—Å—ã–ª–∫–∏: {len(links)} —Å–µ—Ä–≤–µ—Ä–æ–≤
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞: –ì–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ

{EMOJI['info']} <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Å—ã–ª–∫–∏:</b>
‚Ä¢ VLESS - –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ - –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

{EMOJI['device']} <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b>
‚Ä¢ v2rayNG, V2Box, Shadowrocket
‚Ä¢ Clash, Sing-box, Outline
"""
    
    try:
        bot.edit_message_text(
            text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def get_vless_configs(message, username):
    """–ü–æ–ª—É—á–∏—Ç—å VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    user_info = marzban_api.get_user_info(username)
    
    if not user_info:
        text = f"{EMOJI['cross']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        links = user_info['links']
        
        text = f"""
{EMOJI['link']} <b>VLESS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</b>

{EMOJI['rocket']} <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã:</b>
"""
        
        for i, link in enumerate(links[:5]):
            server_name = f"–°–µ—Ä–≤–µ—Ä {i+1}"
            if "–ê–ª–±–∞–Ω–∏—è" in link:
                server_name = "üá¶üá± –ê–ª–±–∞–Ω–∏—è"
            elif "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã" in link:
                server_name = "üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã"
            
            text += f"‚Ä¢ {server_name}\n"
        
        text += f"""
{EMOJI['info']} <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:</b>
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É —Å–µ—Ä–≤–µ—Ä–∞
2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2rayNG/Clash
3. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É

{EMOJI['rocket']} <b>–ì–æ—Ç–æ–≤–æ! –í–∞—à VPN –∞–∫—Ç–∏–≤–µ–Ω</b>
"""
    
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data=f"show_vless_{username}"))
    
    try:
        bot.edit_message_text(
            text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except:
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def show_vless_links(message, username):
    """–ü–æ–∫–∞–∑–∞—Ç—å VLESS —Å—Å—ã–ª–∫–∏"""
    keyboard = types.InlineKeyboardMarkup()
    
    user_info = marzban_api.get_user_info(username)
    
    if not user_info:
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="my_subscriptions"))
        text = f"{EMOJI['cross']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        links = user_info['links']
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['link']} –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", callback_data=f"get_configs_{username}"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        for i, link in enumerate(links[:5]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 5 —Å—Å—ã–ª–æ–∫
            server_name = f"–°–µ—Ä–≤–µ—Ä {i+1}"
            if "–ê–ª–±–∞–Ω–∏—è" in link:
                server_name = "üá¶üá± –ê–ª–±–∞–Ω–∏—è"
            elif "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã" in link:
                server_name = "üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã"
            
            keyboard.add(
                types.InlineKeyboardButton(f"{EMOJI['link']} {server_name}", callback_data=f"copy_link_{i}")
            )
        
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data=f"get_link_{username}"))
        
        text = f"""
{EMOJI['link']} <b>VLESS —Å—Å—ã–ª–∫–∏</b>

{EMOJI['rocket']} <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã:</b>
‚Ä¢ üá¶üá± –ê–ª–±–∞–Ω–∏—è - –±—ã—Å—Ç—Ä—ã–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π
‚Ä¢ üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã - –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Å–µ—Ä–≤–µ—Ä

{EMOJI['info']} <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏</b>

{EMOJI['device']} <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É
3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ VPN –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""
    
    try:
        bot.edit_message_text(
            text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def show_subscription_link(message, username):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É"""
    keyboard = types.InlineKeyboardMarkup()
    
    user_info = marzban_api.get_user_info(username)
    
    if not user_info:
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="my_subscriptions"))
        text = f"{EMOJI['cross']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        subscription_url = user_info['subscription_url']
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['robot']} @yovpnrobot", url="https://t.me/yovpnrobot"))
        keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data=f"get_link_{username}"))
        
        text = f"""
{EMOJI['link']} <b>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É</b>

{EMOJI['rocket']} <b>–ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:</b>

<code>{subscription_url}</code>

{EMOJI['info']} <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ
2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ VPN –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç —Å–µ—Ä–≤–µ—Ä—ã

{EMOJI['device']} <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b>
‚Ä¢ Clash, Sing-box, Outline
‚Ä¢ v2rayNG (—á–µ—Ä–µ–∑ –ø–æ–¥–ø–∏—Å–∫—É)
"""
    
    try:
        bot.edit_message_text(
            text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def copy_vless_link(message, callback_data):
    """–ü–æ–∫–∞–∑–∞—Ç—å VLESS —Å—Å—ã–ª–∫—É –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="my_subscriptions"))
    
    # –ü–æ–ª—É—á–∞–µ–º username –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    username = message.from_user.username or message.from_user.first_name.lower().replace(" ", "_")
    user_info = marzban_api.get_user_info(username)
    
    if not user_info:
        text = f"{EMOJI['cross']} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        links = user_info['links']
        link_index = int(callback_data.replace("copy_link_", ""))
        
        if link_index < len(links):
            vless_link = links[link_index]
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
            server_name = "–°–µ—Ä–≤–µ—Ä"
            if "–ê–ª–±–∞–Ω–∏—è" in vless_link:
                server_name = "üá¶üá± –ê–ª–±–∞–Ω–∏—è"
            elif "–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã" in vless_link:
                server_name = "üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã"
            
            text = f"""
{EMOJI['link']} <b>{server_name}</b>

{EMOJI['rocket']} <b>VLESS —Å—Å—ã–ª–∫–∞:</b>

<code>{vless_link}</code>

{EMOJI['info']} <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ
2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ VPN –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É

{EMOJI['device']} <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b>
‚Ä¢ v2rayNG, V2Box, Shadowrocket
‚Ä¢ Clash, Sing-box, Outline
"""
        else:
            text = f"{EMOJI['cross']} –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    try:
        bot.edit_message_text(
            text,
            message.chat.id,
            message.message_id,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.send_message(
            message.chat.id,
            text,
            parse_mode='HTML',
            reply_markup=keyboard
        )

def show_balance_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –±–∞–ª–∞–Ω—Å–∞"""
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['payment']} –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="top_up_balance"),
        types.InlineKeyboardButton(f"{EMOJI['history']} –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è", callback_data="payment_history"),
        types.InlineKeyboardButton(f"{EMOJI['coupon']} –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É–ø–æ–Ω", callback_data="activate_coupon"),
        types.InlineKeyboardButton(f"{EMOJI['back']} –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="back_to_main")
    )
    
    text = f"""
{EMOJI['balance']} <b>–ë–∞–ª–∞–Ω—Å:</b> 0 ‚ÇΩ

{EMOJI['info']} <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>

{EMOJI['payment']} <b>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</b> - –î–æ–±–∞–≤–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å—á–µ—Ç
{EMOJI['history']} <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b> - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
{EMOJI['coupon']} <b>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É–ø–æ–Ω</b> - –í–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_invite_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π"""
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['share']} –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", url=f"https://t.me/share/url?url=https://t.me/{bot.get_me().username}?start=ref_{message.from_user.username}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –ª—É—á—à–µ–º—É VPN —Å–µ—Ä–≤–∏—Å—É!"),
        types.InlineKeyboardButton(f"{EMOJI['qr']} –ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥", callback_data="show_qr"),
        types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )
    
    text = f"""
{EMOJI['referral']} <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b>

{EMOJI['info']} <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: 0 —á–µ–ª–æ–≤–µ–∫
‚Ä¢ –î–æ—Ö–æ–¥ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0 ‚ÇΩ

{EMOJI['link']} <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>
https://t.me/{bot.get_me().username}?start=ref_{message.from_user.username}

{EMOJI['info']} <b>–£—Ä–æ–≤–Ω–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:</b>
‚Ä¢ 1-–π —É—Ä–æ–≤–µ–Ω—å: 25% –æ—Ç –ø–ª–∞—Ç–µ–∂–∞
‚Ä¢ 2-–π —É—Ä–æ–≤–µ–Ω—å: 25% –æ—Ç –ø–ª–∞—Ç–µ–∂–∞
‚Ä¢ 3-–π —É—Ä–æ–≤–µ–Ω—å: 10% –æ—Ç –ø–ª–∞—Ç–µ–∂–∞
‚Ä¢ 4-–π —É—Ä–æ–≤–µ–Ω—å: 5% –æ—Ç –ø–ª–∞—Ç–µ–∂–∞
‚Ä¢ 5-–π —É—Ä–æ–≤–µ–Ω—å: 2% –æ—Ç –ø–ª–∞—Ç–µ–∂–∞
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_referrals_menu(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    
    text = f"""
{EMOJI['referral']} <b>–ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:</b>

{EMOJI['cross']} <b>–†–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</b>

{EMOJI['info']} <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: 0
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: 0
‚Ä¢ –î–æ—Ö–æ–¥: 0 ‚ÇΩ

{EMOJI['link']} <b>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Ö–æ–¥!</b>
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_about_service(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ"""
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    
    keyboard.add(
        types.InlineKeyboardButton(f"{EMOJI['support']} –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support_chat"),
        types.InlineKeyboardButton(f"{EMOJI['channel']} –ö–∞–Ω–∞–ª", callback_data="channel_link"),
        types.InlineKeyboardButton(f"{EMOJI['back']} –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="back_to_main")
    )
    
    text = f"""
{EMOJI['info']} <b>–û —Å–µ—Ä–≤–∏—Å–µ</b>

<b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>
‚Ä¢ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
‚Ä¢ –í–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü–æ–ª–Ω–æ–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–æ–≥–æ–≤
‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ 24/7
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

{EMOJI['device']} <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:</b>
‚Ä¢ Windows, macOS, Linux
‚Ä¢ iOS, Android
‚Ä¢ Router, Smart TV

{EMOJI['security']} <b>–ü—Ä–æ—Ç–æ–∫–æ–ª—ã:</b>
‚Ä¢ V2Ray, Clash, Sing-box
‚Ä¢ Outline, Shadowsocks
‚Ä¢ WireGuard, OpenVPN

{EMOJI['support']} <b>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–†–∞–±–æ—Ç–∞–µ–º –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def handle_subscription_purchase(message, callback_data):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    months = callback_data.split('_')[1]
    
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="add_subscription"))
    
    text = f"""
{EMOJI['subscription']} <b>–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ {months} –º–µ—Å—è—Ü(–∞)</b>

{EMOJI['warning']} <b>–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞</b>

{EMOJI['info']} <b>–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</b>

{EMOJI['support']} <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @your_support
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_payment_options(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="balance"))
    
    text = f"""
{EMOJI['payment']} <b>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>

{EMOJI['warning']} <b>–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞</b>

{EMOJI['info']} <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>
‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã
‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏

{EMOJI['support']} <b>–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</b>
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_payment_history(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–ª–∞—Ç–µ–∂–µ–π"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="balance"))
    
    text = f"""
{EMOJI['history']} <b>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b>

{EMOJI['cross']} <b>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</b>

{EMOJI['info']} <b>–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ –≤–∞—à–∏ –ø–ª–∞—Ç–µ–∂–∏</b>
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def activate_coupon(message):
    """–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫—É–ø–æ–Ω–∞"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="balance"))
    
    text = f"""
{EMOJI['coupon']} <b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫—É–ø–æ–Ω–∞</b>

{EMOJI['info']} <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</b>

{EMOJI['warning']} <b>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def share_referral_link(message):
    """–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="invite_friend"))
    
    text = f"""
{EMOJI['share']} <b>–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π</b>

{EMOJI['link']} <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>
https://t.me/{bot.get_me().username}?start=ref_{message.from_user.username}

{EMOJI['info']} <b>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Ö–æ–¥!</b>
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_qr_code(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="invite_friend"))
    
    text = f"""
{EMOJI['qr']} <b>QR-–∫–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏</b>

{EMOJI['warning']} <b>QR-–∫–æ–¥ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>

{EMOJI['info']} <b>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç QR-–∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞</b>
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_support_chat(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="about_service"))
    
    text = f"""
{EMOJI['support']} <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>

{EMOJI['info']} <b>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:</b>

{EMOJI['support']} <b>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @your_support
{EMOJI['channel']} <b>–ö–∞–Ω–∞–ª:</b> @your_channel
{EMOJI['info']} <b>Email:</b> support@yourdomain.com

{EMOJI['info']} <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> 24/7
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

def show_channel_link(message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f"{EMOJI['back']} –ù–∞–∑–∞–¥", callback_data="about_service"))
    
    text = f"""
{EMOJI['channel']} <b>–ù–∞—à –∫–∞–Ω–∞–ª</b>

{EMOJI['info']} <b>–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è:</b>

{EMOJI['check']} –ù–æ–≤–æ—Å—Ç–µ–π –æ —Å–µ—Ä–≤–∏—Å–µ
{EMOJI['check']} –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏–π
{EMOJI['check']} –ü–æ–ª–µ–∑–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –ø–æ VPN
{EMOJI['check']} –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π

{EMOJI['channel']} <b>–ö–∞–Ω–∞–ª:</b> @your_channel
"""
    
    bot.edit_message_text(
        text,
        message.chat.id,
        message.message_id,
        parse_mode='HTML',
        reply_markup=keyboard
    )

@bot.message_handler(commands=['subs'])
def subs_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /subs"""
    show_my_subscriptions(message)

@bot.message_handler(commands=['invite'])
def invite_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /invite"""
    show_invite_menu(message)

if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
    max_retries = 3
    retry_count = 0
    
    while retry_count < max_retries:
        try:
            bot.polling(none_stop=True)
            break
        except Exception as e:
            if "Conflict: terminated by other getUpdates request" in str(e):
                retry_count += 1
                logger.warning(f"–î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ {retry_count}/{max_retries}")
                if retry_count < max_retries:
                    time.sleep(10)  # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                else:
                    logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫")
                    sys.exit(1)
            else:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
                sys.exit(1)
