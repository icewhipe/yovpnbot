"""
Middleware –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
–î–æ–±–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
"""

import logging
from typing import Callable, Dict, Any, Awaitable
from aiogram import BaseMiddleware
from aiogram.types import Message, CallbackQuery

logger = logging.getLogger(__name__)

class ServicesMiddleware(BaseMiddleware):
    """
    Middleware –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
    
    –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ bot.data –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    
    –í–ê–ñ–ù–û: –°–µ—Ä–≤–∏—Å—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –û–î–ò–ù –†–ê–ó –∏ –∑–∞—Ç–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
    –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, —á—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    """
    
    def __init__(self, services=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è middleware
        
        Args:
            services: –ì–æ—Ç–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã (–µ—Å–ª–∏ None, –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ)
        """
        self._services = services
        self._initialized = services is not None
    
    async def __call__(
        self,
        handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
        event: Message | CallbackQuery,
        data: Dict[str, Any]
    ) -> Any:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ middleware
        
        Args:
            handler: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
            event: –°–æ–±—ã—Ç–∏–µ (Message –∏–ª–∏ CallbackQuery)
            data: –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
        
        Returns:
            Any: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
        """
        # –ü–æ–ª—É—á–∞–µ–º –±–æ—Ç–∞ –∏–∑ —Å–æ–±—ã—Ç–∏—è
        bot = event.bot
        
        # –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å—ã –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∏—Ö –û–î–ò–ù –†–ê–ó
        if not self._initialized:
            logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ middleware (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –û–î–ò–ù –†–ê–ó)...")
            self._services = await self._create_services(bot)
            self._initialized = True
            logger.info("‚úÖ –°–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∏ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ
        if not self._services:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã –≤ middleware")
            return await handler(event, data)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å—ã –≤ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
        data["services"] = self._services
        
        # –í—ã–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        return await handler(event, data)
    
    async def _create_services(self, bot) -> Any:
        """
        –°–æ–∑–¥–∞—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        
        Returns:
            BotServices: –û–±—ä–µ–∫—Ç —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏
        """
        try:
            from bot.services.bot_services import BotServices
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
            services = BotServices(bot)
            
            logger.info("‚úÖ –°–µ—Ä–≤–∏—Å—ã —Å–æ–∑–¥–∞–Ω—ã –≤ middleware")
            return services
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ middleware: {e}")
            return None
    
    def get_user_service(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        return self._services.get_user_service() if self._services else None
    
    def get_marzban_service(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å Marzban"""
        return self._services.get_marzban_service() if self._services else None
    
    def get_payment_service(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–ª–∞—Ç–µ–∂–µ–π"""
        return self._services.get_payment_service() if self._services else None
    
    def get_notification_service(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        return self._services.get_notification_service() if self._services else None
    
    def get_animation_service(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å –∞–Ω–∏–º–∞—Ü–∏–π"""
        return self._services.get_animation_service() if self._services else None
    
    def get_ui_service(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å UI"""
        return self._services.get_ui_service() if self._services else None