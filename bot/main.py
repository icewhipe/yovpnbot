#!/usr/bin/env python3
"""
YoVPN Telegram Bot - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ VPN-–ø–æ–¥–ø–∏—Å–æ–∫ —Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UX/UI –¥–∏–∑–∞–π–Ω
- –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –º–æ–¥–µ–ª—å –æ–ø–ª–∞—Ç—ã (4 —Ä—É–±–ª—è –≤ –¥–µ–Ω—å)
- –ü–æ–ª–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
"""

import asyncio
import logging
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage

# –ò–º–ø–æ—Ä—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
from src.config import config
from bot.handlers import register_handlers, init_admin_panel
from bot.middleware import register_middleware
from bot.services import BotServices

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
   log_to_file = os.getenv('LOG_TO_FILE', '0') == '1'
log_file = os.getenv('LOG_FILE', '/tmp/bot.log')

handlers = [logging.StreamHandler(sys.stdout)]
if log_to_file:
    handlers = [logging.FileHandler(log_file)]

logging.basicConfig(
    level=os.getenv('LOG_LEVEL', 'INFO').upper(),
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=handlers,
)
logger = logging.getLogger(__name__)

class YoVPNBot:
    """
    –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ YoVPN
    
    –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
    - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ middleware
    - –ó–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞
    - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏
    """
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.bot = Bot(
            token=config.BOT_TOKEN,
            default=DefaultBotProperties(parse_mode=ParseMode.HTML)
        )
        self.dp = Dispatcher(storage=MemoryStorage())
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –û–î–ò–ù –†–ê–ó
        self.services = BotServices(self.bot)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middleware —Å –≥–æ—Ç–æ–≤—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
        register_middleware(self.dp, self.services)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        register_handlers(self.dp)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Å –í–°–ï–ú–ò —Å–µ—Ä–≤–∏—Å–∞–º–∏
        init_admin_panel(
            self.services.user_service,
            self.services.marzban_service,
            self.services.ui_service,
            self.services.animation_service  # –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–æ–±–∞–≤–ª–µ–Ω animation_service
        )
        
        logger.info("YoVPN Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            logger.info("üöÄ –ó–∞–ø—É—Å–∫ YoVPN Bot...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
            await self.services.start_background_tasks()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            await self.dp.start_polling(
                self.bot,
                allowed_updates=["message", "callback_query"]
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
            raise
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        try:
            logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ YoVPN Bot...")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
            await self.services.stop_background_tasks()
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
            await self.bot.session.close()
            
            logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot = YoVPNBot()
    
    try:
        await bot.start()
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await bot.stop()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        logger.error(f"üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
