"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤
–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö callback –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import logging
from aiogram import Dispatcher
from aiogram.types import CallbackQuery
from aiogram import F

from assets.emojis.interface import EMOJI

logger = logging.getLogger(__name__)

async def handle_main_menu(callback: CallbackQuery, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
    """
    user_id = callback.from_user.id
    first_name = callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏–∑ middleware
        services = kwargs.get("services")
        if not services:
            await callback.answer("‚ùå –°–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã", show_alert=True)
            return
        
        user_service = services.get_user_service()
        ui_service = services.get_ui_service()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.get_or_create_user(
            user_id=user_id,
            username=callback.from_user.username,
            first_name=callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await user_service.get_user_stats(user_id)
        balance = stats.get('balance', 0.0)
        subscription_active = stats.get('subscription_active', False)
        subscription_days = stats.get('subscription_days', 0)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = f"""
üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

üëã <b>–ü—Ä–∏–≤–µ—Ç, {first_name}!</b>

üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {balance:.2f} ‚ÇΩ
üìÖ <b>–î–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞:</b> {subscription_days} –¥–Ω–µ–π
üìä <b>–ü–æ–¥–ø–∏—Å–∫–∞:</b> {'–ê–∫—Ç–∏–≤–Ω–∞' if subscription_active else '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}

<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
        """
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        keyboard = ui_service.create_main_menu_keyboard()
        
        await callback.message.edit_text(
            message_text,
            reply_markup=keyboard
        )
        
        await callback.answer()
        logger.info(f"üè† –ü–æ–∫–∞–∑–∞–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_main_menu: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

async def handle_stats(callback: CallbackQuery, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏–∑ middleware
        services = kwargs.get("services")
        if not services:
            await callback.answer("‚ùå –°–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã", show_alert=True)
            return
        
        user_service = services.get_user_service()
        ui_service = services.get_ui_service()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.get_or_create_user(
            user_id=user_id,
            username=callback.from_user.username,
            first_name=callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await user_service.get_user_stats(user_id)
        balance = stats.get('balance', 0.0)
        total_payments = stats.get('total_payments', 0.0)
        referrals_count = stats.get('referrals_count', 0)
        created_at = stats.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        
        message_text = f"""
üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

<b>üí∞ –§–∏–Ω–∞–Ω—Å—ã:</b>
‚Ä¢ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:.2f} ‚ÇΩ
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ: {total_payments:.2f} ‚ÇΩ
‚Ä¢ –î–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞: {int(balance / 4)} –¥–Ω–µ–π

<b>üë• –†–µ—Ñ–µ—Ä–∞–ª—ã:</b>
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {referrals_count} —á–µ–ª–æ–≤–µ–∫
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {referrals_count * 20} ‚ÇΩ
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>ref_{user_id}</code>

<b>üìÖ –ê–∫–∫–∞—É–Ω—Ç:</b>
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {created_at[:10] if created_at != '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ' else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
‚Ä¢ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã

<b>üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>
‚Ä¢ {'ü•á –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂' if total_payments > 0 else 'ü•â –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
‚Ä¢ {'ü•à –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç' if total_payments > 100 else ''}
‚Ä¢ {'ü•â –ú–∞—Å—Ç–µ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤' if referrals_count > 5 else ''}
        """
        
        keyboard = ui_service.create_back_keyboard("main_menu")
        
        await callback.message.edit_text(
            message_text,
            reply_markup=keyboard
        )
        
        await callback.answer()
        logger.info(f"üìä –ü–æ–∫–∞–∑–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_stats: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

async def handle_referrals(callback: CallbackQuery, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–µ—Ñ–µ—Ä–∞–ª—ã"
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
    """
    user_id = callback.from_user.id
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –∏–∑ middleware
        services = kwargs.get("services")
        if not services:
            await callback.answer("‚ùå –°–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã", show_alert=True)
            return
        
        user_service = services.get_user_service()
        ui_service = services.get_ui_service()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.get_or_create_user(
            user_id=user_id,
            username=callback.from_user.username,
            first_name=callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        stats = await user_service.get_user_stats(user_id)
        referrals_count = stats.get('referrals_count', 0)
        referral_code = user.get('referral_code', f"ref_{user_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        bot_username = callback.bot.get_me().username
        referral_link = f"https://t.me/{bot_username}?start={referral_code}"
        
        message_text = f"""
üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

<b>üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏!</b>

<b>üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {referrals_count} —á–µ–ª–æ–≤–µ–∫
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {referrals_count * 20} ‚ÇΩ
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>{referral_code}</code>

<b>üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>
<code>{referral_link}</code>

<b>üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏
2. –î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ
3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 20 ‚ÇΩ –Ω–∞ –±–∞–ª–∞–Ω—Å
4. –î—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç 20 ‚ÇΩ –±–æ–Ω—É—Å

<b>üìã –ü—Ä–∞–≤–∏–ª–∞:</b>
‚Ä¢ –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –æ–ø–ª–∞—Ç—ã –¥—Ä—É–≥–∞
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 100 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –≤ –º–µ—Å—è—Ü
‚Ä¢ –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–µ–π–∫–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        """
        
        keyboard = ui_service.create_back_keyboard("main_menu")
        
        await callback.message.edit_text(
            message_text,
            reply_markup=keyboard
        )
        
        await callback.answer()
        logger.info(f"üéÅ –ü–æ–∫–∞–∑–∞–Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_referrals: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

async def handle_instructions(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN
    """
    try:
        message_text = f"""
üìã <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ VPN</b>

<b>üì± –ú–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b>

<b>Android:</b>
1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2rayNG –∏–∑ Google Play
2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ù–∞–∂–º–∏—Ç–µ "+" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
4. –í—ã–±–µ—Ä–∏—Ç–µ "–ò–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞"
5. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞
6. –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"

<b>iOS:</b>
1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ OneClick –∏–∑ App Store
2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
4. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞
5. –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"

<b>üíª –ö–æ–º–ø—å—é—Ç–µ—Ä—ã:</b>

<b>Windows:</b>
1. –°–∫–∞—á–∞–π—Ç–µ V2rayN —Å GitHub
2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ v2rayN.exe
4. –ù–∞–∂–º–∏—Ç–µ "–°–µ—Ä–≤–µ—Ä—ã" ‚Üí "–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞"
5. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞
6. –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å

<b>macOS:</b>
1. –°–∫–∞—á–∞–π—Ç–µ V2rayU —Å GitHub
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –û—Ç–∫—Ä–æ–π—Ç–µ V2rayU
4. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" ‚Üí "–ò–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞"
5. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞
6. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É

<b>üêß Linux:</b>
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ v2ray-core
2. –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
3. –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –±–æ—Ç–∞
4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ v2ray

<b>‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @YoVPNSupport
        """
        
        from bot.services.ui_service import UIService
        ui_service = UIService()
        keyboard = ui_service.create_back_keyboard("my_subscriptions")
        
        await callback.message.edit_text(
            message_text,
            reply_markup=keyboard
        )
        
        await callback.answer()
        logger.info(f"üìã –ü–æ–∫–∞–∑–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_instructions: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)

def register_callback_handler(dp: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback –∑–∞–ø—Ä–æ—Å–æ–≤
    
    Args:
        dp: –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞
    """
    dp.callback_query.register(handle_main_menu, F.data == "main_menu")
    dp.callback_query.register(handle_stats, F.data == "stats")
    dp.callback_query.register(handle_referrals, F.data == "referrals")
    dp.callback_query.register(handle_instructions, F.data == "instructions")
    
    logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")