"""
–°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ –ø–ª–∞—Ç–µ–∂–∞—Ö, –ø–æ–¥–ø–∏—Å–∫–∞—Ö –∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö
"""

import asyncio
import logging
from typing import List, Dict, Any, Optional
from datetime import datetime, timedelta

logger = logging.getLogger(__name__)

class NotificationService:
    """
    –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    
    –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
    - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö –∏ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
    - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–∏–∑–∫–æ–º –±–∞–ª–∞–Ω—Å–µ
    - –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    - –ú–∞—Å—Å–æ–≤—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏
    """
    
    def __init__(self, bot):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        """
        self.bot = bot
        self._running = False
        
        logger.info("‚úÖ NotificationService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def send_payment_success_notification(self, user_id: int, amount: float, days: int):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            amount: –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞
            days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
        """
        try:
            message = f"""
üí∞ <b>–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!</b>

‚úÖ <b>–°—É–º–º–∞:</b> {amount:.2f} ‚ÇΩ
üìÖ <b>–î–æ–±–∞–≤–ª–µ–Ω–æ –¥–Ω–µ–π:</b> {days}
üí≥ <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω

<b>–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω!</b>
–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ VPN.
            """
            
            await self.bot.send_message(user_id, message)
            logger.info(f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ: {e}")
    
    async def send_subscription_activated_notification(self, user_id: int, days: int):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            days: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
        """
        try:
            message = f"""
üéâ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!</b>

‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–Ω–∞
üìÖ <b>–°—Ä–æ–∫:</b> {days} –¥–Ω–µ–π
üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 4 ‚ÇΩ –≤ –¥–µ–Ω—å
üîÑ <b>–ü—Ä–æ–¥–ª–µ–Ω–∏–µ:</b> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ

<b>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</b>
1. üì± –ù–∞—Å—Ç—Ä–æ–π—Ç–µ VPN –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
2. üîó –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
3. üöÄ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º!
            """
            
            await self.bot.send_message(user_id, message)
            logger.info(f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {e}")
    
    async def send_low_balance_warning(self, user_id: int, balance: float, days_left: int):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–º –±–∞–ª–∞–Ω—Å–µ
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            balance: –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
            days_left: –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å
        """
        try:
            message = f"""
‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ! –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å</b>

üí∞ <b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> {balance:.2f} ‚ÇΩ
üìÖ <b>–î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å:</b> {days_left}
üîÑ <b>–ü—Ä–æ–¥–ª–µ–Ω–∏–µ:</b> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ

<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</b> –¥–ª—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ VPN.

<b>–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç:</b>
‚Ä¢ –ü—Ä–∏ –±–∞–ª–∞–Ω—Å–µ < 4 ‚ÇΩ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è
‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ
‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            """
            
            await self.bot.send_message(user_id, message)
            logger.info(f"üìß –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–∏–∑–∫–æ–º –±–∞–ª–∞–Ω—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –±–∞–ª–∞–Ω—Å–µ: {e}")
    
    async def send_subscription_suspended_notification(self, user_id: int, reason: str = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤"):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            reason: –ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        """
        try:
            message = f"""
‚ùå <b>–ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>

üìã <b>–ü—Ä–∏—á–∏–Ω–∞:</b> {reason}
üîÑ <b>–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</b> –ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
üí≥ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 4 ‚ÇΩ –≤ –¥–µ–Ω—å

<b>–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:</b>
1. üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å—É–º–º—É –æ—Ç 4 ‚ÇΩ
2. üîÑ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
3. üì± –ù–∞—Å—Ç—Ä–æ–π—Ç–µ VPN –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ

<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É üëá
            """
            
            await self.bot.send_message(user_id, message)
            logger.info(f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")
    
    async def send_daily_payment_notification(self, user_id: int, amount: float, days_left: int):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º —Å–ø–∏—Å–∞–Ω–∏–∏
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            amount: –°—É–º–º–∞ —Å–ø–∏—Å–∞–Ω–∏—è
            days_left: –î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å
        """
        try:
            message = f"""
üí≥ <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Å–ø–∏—Å–∞–Ω–∏–µ</b>

üí∞ <b>–°–ø–∏—Å–∞–Ω–æ:</b> {amount:.2f} ‚ÇΩ
üìÖ <b>–î–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å:</b> {days_left}
üîÑ <b>–°–ª–µ–¥—É—é—â–µ–µ —Å–ø–∏—Å–∞–Ω–∏–µ:</b> –ó–∞–≤—Ç—Ä–∞ –≤ 00:00

<b>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –Ω–∞ 1 –¥–µ–Ω—å!</b>
–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º.
            """
            
            await self.bot.send_message(user_id, message)
            logger.info(f"üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º —Å–ø–∏—Å–∞–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–ø–∏—Å–∞–Ω–∏–∏: {e}")
    
    async def send_system_notification(self, user_id: int, title: str, message: str, notification_type: str = "info"):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            message: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            notification_type: –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (info, warning, error, success)
        """
        try:
            emoji_map = {
                'info': '‚ÑπÔ∏è',
                'warning': '‚ö†Ô∏è',
                'error': '‚ùå',
                'success': '‚úÖ'
            }
            
            emoji = emoji_map.get(notification_type, '‚ÑπÔ∏è')
            
            formatted_message = f"""
{emoji} <b>{title}</b>

{message}

<b>–í—Ä–µ–º—è:</b> {datetime.now().strftime('%d.%m.%Y %H:%M')}
            """
            
            await self.bot.send_message(user_id, formatted_message)
            logger.info(f"üìß –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {title}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    
    async def notification_loop(self):
        """
        –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        """
        self._running = True
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        
        while self._running:
            try:
                await self._check_and_send_notifications()
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
                await asyncio.sleep(6 * 60 * 60)
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
                await asyncio.sleep(60 * 60)  # –ñ–¥–µ–º —á–∞—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ
    
    async def _check_and_send_notifications(self):
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        """
        try:
            # –ó–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            # –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–∏–∑–∫–æ–º –±–∞–ª–∞–Ω—Å–µ
            logger.debug("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
    
    async def send_bulk_notification(self, user_ids: List[int], message: str, title: str = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"):
        """
        –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        
        Args:
            user_ids: –°–ø–∏—Å–æ–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            title: –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        try:
            formatted_message = f"""
üì¢ <b>{title}</b>

{message}

<b>–í—Ä–µ–º—è:</b> {datetime.now().strftime('%d.%m.%Y %H:%M')}
            """
            
            success_count = 0
            for user_id in user_ids:
                try:
                    await self.bot.send_message(user_id, formatted_message)
                    success_count += 1
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            
            logger.info(f"üìß –ú–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count}/{len(user_ids)}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏: {e}")
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å"""
        self._running = False
        logger.info("üõë NotificationService –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def is_running(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å"""
        return self._running