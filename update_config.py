#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
"""

import os
import sys
from pathlib import Path

def update_env_file(bot_token=None, marzban_token=None):
    """–û–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª"""
    env_file = Path('.env')
    
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    with open(env_file, 'r') as f:
        lines = f.readlines()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã
    updated_lines = []
    for line in lines:
        if line.startswith('USERBOT_TOKEN=') and bot_token:
            updated_lines.append(f'USERBOT_TOKEN={bot_token}\n')
        elif line.startswith('MARZBAN_ADMIN_TOKEN=') and marzban_token:
            updated_lines.append(f'MARZBAN_ADMIN_TOKEN={marzban_token}\n')
        else:
            updated_lines.append(line)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(env_file, 'w') as f:
        f.writelines(updated_lines)
    
    print("‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True

def interactive_update():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ YoVPN –±–æ—Ç–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    try:
        from src.config import config
        print(f"–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: {config.BOT_TOKEN[:10]}...")
        print(f"–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω Marzban: {config.MARZBAN_ADMIN_TOKEN[:10]}...")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    print("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_token = input("\nü§ñ –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞: ").strip()
    if not bot_token:
        bot_token = None
        print("   –ü—Ä–æ–ø—É—â–µ–Ω–æ")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω Marzban
    marzban_token = input("üåê –¢–æ–∫–µ–Ω Marzban –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    if not marzban_token:
        marzban_token = None
        print("   –ü—Ä–æ–ø—É—â–µ–Ω–æ")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª
    if bot_token or marzban_token:
        if update_env_file(bot_token, marzban_token):
            print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
            try:
                # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                import importlib
                import src.config
                importlib.reload(src.config)
                
                from src.config import config
                print(f"   –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {config.BOT_TOKEN[:10]}...")
                print(f"   –¢–æ–∫–µ–Ω Marzban: {config.MARZBAN_ADMIN_TOKEN[:10]}...")
                
                return True
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
                return False
        else:
            return False
    else:
        print("‚ùå –ù–µ—á–µ–≥–æ –æ–±–Ω–æ–≤–ª—è—Ç—å")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        # –ù–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        if sys.argv[1] == '--help':
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python3 update_config.py                    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º")
            print("  python3 update_config.py --help             # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É")
            return True
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏")
            return False
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        return interactive_update()

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)